diff -urN pgplotsrc-orig/drivers/pndriv.c pgplotsrc/drivers/pndriv.c
--- pgplotsrc-orig/drivers/pndriv.c	1999-03-27 13:06:23
+++ pgplotsrc/drivers/pndriv.c	2024-05-23 15:16:10
@@ -27,6 +27,10 @@
   March, 1999
   Pete Ratzlaff <pratzlaff@cfa.harvard.edu>
 
+  July, 2011
+    Fixed uninitialized error flag in the DeviceData struct which could
+    sporadically cause output to go unwritten.
+
 */
 
 #include <stdlib.h>
@@ -61,11 +65,8 @@
 #define DEVICE_CAPABILITIES "HNNNNRPNYN"
 #define DEFAULT_FILENAME "pgplot.png"
 
-#define boolean unsigned char
-#define true 1
-#define false 0
+typedef enum {false=0, true} boolean;
 
-
 #define PNG_IDENT_BASIC "PGPLOT /png" /* used in warning messages */
 #define PNG_IDENT_TRANS "PGPLOT /tpng" /* used in warning messages */
 static char *png_ident; /* should be set each time pndriv() is entered */
@@ -104,8 +105,7 @@
 static ColorComponent default_colortable[NCOLORS * 3];
 
 /* data for a single open device */
-typedef struct _DeviceData DeviceData, *DeviceDataPtr;
-struct _DeviceData {
+typedef struct {
   int w, h;
   long npix; /* w*h */
   boolean trans; /* transparent background flag */
@@ -116,15 +116,15 @@
   ColorComponent ctable[NCOLORS * 3];
   ColorIndex cindex; /* current plotting color index */
   int devnum; /* this device's identifier */
-};
+} DeviceData, *DeviceDataPtr;
 
 /* global data holding all devices */
-typedef struct _Devices Devices;
-struct _Devices {
+typedef struct {
   DeviceDataPtr *devices;
   int nallocated;
   int active;
-};
+} Devices;
+
 static Devices all_devices;
 
 /* number of DeviceData structures to allocate at a time */
@@ -180,7 +180,7 @@
   */
 #define EXTRA_CHARS 16 /* allow 10^15 image files per device */
 
-  filename = malloc(strlen(dev->filename)+EXTRA_CHARS);
+  filename = malloc(strlen(dev->filename)+EXTRA_CHARS+1);
   if (!filename) {
 	fprintf(stderr,"%s: out of memory, plotting disabled\n", png_ident);
 	dev->error = true;
@@ -222,7 +222,7 @@
 	return;
   }
 
-  if (setjmp(png_ptr->jmpbuf)) { /* not really sure what I'm doing here... */
+  if (setjmp(png_jmpbuf(png_ptr))) { /* not really sure what I'm doing here... */
 	fprintf(stderr,"%s: error in libpng while writing file %s, plotting disabled\n", png_ident, filename);
 	png_destroy_write_struct(&png_ptr,&info_ptr);
 	dev->error = true;
@@ -355,7 +355,7 @@
 static void make_device_active(float devnum) {
   all_devices.active = devnum;
   if (ACTIVE_DEVICE == NULL)
-	fprintf(stderr,"%s: one SIGSEGV coming right up! ACTIVE_DEVICE == NULL\n",png_ident);
+	fprintf(stderr,"%s: out of memory, ACTIVE_DEVICE=NULL\n",png_ident);
 }
 
 /*
@@ -484,7 +484,7 @@
 	}
   }
 
-  if (!(all_devices.devices[devnum] = malloc(sizeof(DeviceData)))) {
+  if (!(all_devices.devices[devnum] = calloc(1, sizeof(DeviceData)))) {
 	fprintf(stderr,"%s: out of memory\n", png_ident);
 	return;
   }
@@ -505,6 +505,8 @@
   initialize_device_ctable(ACTIVE_DEVICE);
   ACTIVE_DEVICE->devnum = devnum;
   ACTIVE_DEVICE->npages = 0;
+  ACTIVE_DEVICE->error = false;
+  ACTIVE_DEVICE->pixmap = NULL;
 
   if (mode & TRANS_ON)
 	ACTIVE_DEVICE->trans = true;
diff -urN pgplotsrc-orig/drivers.list pgplotsrc/drivers.list
--- pgplotsrc-orig/drivers.list	2005-01-07 11:41:00
+++ pgplotsrc/drivers.list	2024-07-04 20:06:50
@@ -11,35 +11,35 @@
 ! that use 64-bit addresses.
 !
 ! AQDRIV 0 /AQT       AquaTerm under Mac OS X                           Mac
-  CGDRIV 1 /CGM       CGM metafile, indexed colour selection            C
-  CGDRIV 2 /CGMD      CGM metafile, direct colour selection             C
-  GIDRIV 1 /GIF       GIF-format file, landscape                        (p)
-  GIDRIV 2 /VGIF      GIF-format file, portrait                         (p)
-  GLDRIV 1 /HPGL      Hewlett-Packard HP-GL plotters, landscape		Std F77
-  GLDRIV 2 /VHPGL     Hewlett-Packard HP-GL plotters, portrait		Std F77
-  HGDRIV 0 /HPGL2     Hewlett-Packard graphics language
+! CGDRIV 1 /CGM       CGM metafile, indexed colour selection            C
+! CGDRIV 2 /CGMD      CGM metafile, direct colour selection             C
+!  GIDRIV 1 /GIF       GIF-format file, landscape                        (p)
+!  GIDRIV 2 /VGIF      GIF-format file, portrait                         (p)
+!  GLDRIV 1 /HPGL      Hewlett-Packard HP-GL plotters, landscape		Std F77
+!  GLDRIV 2 /VHPGL     Hewlett-Packard HP-GL plotters, portrait		Std F77
+!  HGDRIV 0 /HPGL2     Hewlett-Packard graphics language
   NUDRIV 0 /NULL      Null device (no output)				Std F77
 !             Caution: to compile PNDRIV, you need libpng on your system
-!  PNDRIV 1 /PNG       Portable Network Graphics file                    C
-!  PNDRIV 2 /TPNG      Portable Network Graphics file - transparent background C
-  PPDRIV 1 /PPM       Portable Pixel Map file, landscape                (p)
-  PPDRIV 2 /VPPM      Portable PIxel Map file, portrait                 (p)
+  PNDRIV 1 /PNG       Portable Network Graphics file                    C
+  PNDRIV 2 /TPNG      Portable Network Graphics file - transparent background C
+!  PPDRIV 1 /PPM       Portable Pixel Map file, landscape                (p)
+!  PPDRIV 2 /VPPM      Portable PIxel Map file, portrait                 (p)
   PSDRIV 1 /PS        PostScript printers, monochrome, landscape	Std F77
   PSDRIV 2 /VPS       Postscript printers, monochrome, portrait		Std F77
   PSDRIV 3 /CPS       PostScript printers, color, landscape		Std F77
   PSDRIV 4 /VCPS      PostScript printers, color, portrait		Std F77
   PSDRIV 5 /EPS       Encapsulated PostScript, color			Std F77
-  TTDRIV 1 /TEK4010   Tektronix 4006/4010 storage-tube terminal		Std F77
-  TTDRIV 2 /GF        GraphOn terminal					Std F77
-  TTDRIV 3 /RETRO     RetroGraphics terminal				Std F77
-  TTDRIV 4 /GTERM     GTERM Tektronix terminal emulator			Std F77
-  TTDRIV 5 /XTERM     XTERM Tektronix terminal emulator			Std F77
-  TTDRIV 6 /ZSTEM     ZSTEM terminal emulator				Std F77
-  TTDRIV 7 /V603      Visual 603 terminal				Std F77
-  TTDRIV 8 /KRM3      Kermit 3 on IBM-PC				Std F77
-  TTDRIV 9 /TK4100    Tektronix 4100-series terminals			Std F77
-  WDDRIV 1 /WD        X Window dump file, landscape                     (p)
-  WDDRIV 2 /VWD       X Window dump file, portrait                      (p)
+!  TTDRIV 1 /TEK4010   Tektronix 4006/4010 storage-tube terminal		Std F77
+!  TTDRIV 2 /GF        GraphOn terminal					Std F77
+!  TTDRIV 3 /RETRO     RetroGraphics terminal				Std F77
+!  TTDRIV 4 /GTERM     GTERM Tektronix terminal emulator			Std F77
+!  TTDRIV 5 /XTERM     XTERM Tektronix terminal emulator			Std F77
+!  TTDRIV 6 /ZSTEM     ZSTEM terminal emulator				Std F77
+!  TTDRIV 7 /V603      Visual 603 terminal				Std F77
+!  TTDRIV 8 /KRM3      Kermit 3 on IBM-PC				Std F77
+!  TTDRIV 9 /TK4100    Tektronix 4100-series terminals			Std F77
+!  WDDRIV 1 /WD        X Window dump file, landscape                     (p)
+!  WDDRIV 2 /VWD       X Window dump file, portrait                      (p)
   XWDRIV 1 /XWINDOW   Workstations running X Window System		C
   XWDRIV 2 /XSERVE    Persistent window on X Window System		C
 !
diff -urN pgplotsrc-orig/makemake pgplotsrc/makemake
--- pgplotsrc-orig/makemake	2004-01-30 12:06:20
+++ pgplotsrc/makemake	2024-05-23 15:16:10
@@ -1043,7 +1043,7 @@
 grivas.o : $(DRVDIR)/gadef.h
 grtv00.o : $(DRVDIR)/imdef.h
 pgxwin.o : $(DRVDIR)/pgxwin.h
-pndriv.o : ./png.h ./pngconf.h ./zlib.h ./zconf.h
+#pndriv.o : ./png.h ./pngconf.h ./zlib.h ./zconf.h
 
 x2driv.o figdisp_comm.o: $(DRVDIR)/commands.h
 
diff -urN pgplotsrc-orig/src/grimg2.f pgplotsrc/src/grimg2.f
--- pgplotsrc-orig/src/grimg2.f	2002-09-28 02:29:05
+++ pgplotsrc/src/grimg2.f	2024-05-23 15:16:10
@@ -16,7 +16,7 @@
       INTEGER  I,IV,IX,IX1,IX2,IY,IY1,IY2,J, NPIX, LCHR
       REAL     DEN, AV, SFAC, SFACL
       REAL     XXAA,XXBB,YYAA,YYBB,XYAA,XYBB,YXAA,YXBB,XYAAIY,YXAAIY
-      REAL     BUFFER(2050)
+      REAL     BUFFER(5122)
       CHARACTER*1 CHR
       INTRINSIC NINT, LOG
       PARAMETER (SFAC=65000.0)
@@ -80,7 +80,7 @@
                 IV = MININD
             END IF
 C
-            IF (NPIX.LE.2048) THEN
+            IF (NPIX.LE.5120) THEN
 C               -- drop pixels if buffer too small (to be fixed!)
                 NPIX = NPIX+1
                 IF (NPIX.EQ.1) BUFFER(1) = IX
diff -urN pgplotsrc-orig/sys_darwin/gfortran_gcc.conf pgplotsrc/sys_darwin/gfortran_gcc.conf
--- pgplotsrc-orig/sys_darwin/gfortran_gcc.conf	1970-01-01 10:00:00
+++ pgplotsrc/sys_darwin/gfortran_gcc.conf	2024-07-04 19:50:31
@@ -0,0 +1,148 @@
+# The GNU gfortran FORTRAN compiler and Apple CC compiler 
+#-----------------------------------------------------------------------
+
+# Optional: Needed by XWDRIV (/xwindow and /xserve) and
+#           X2DRIV (/xdisp and /figdisp).
+# The arguments needed by the C compiler to locate X-window include files.
+ 
+#   XINCL="-I/opt/local/include"
+   XINCL="-I/usr/X11/include"
+
+# Optional: Needed by XMDRIV (/xmotif).
+# The arguments needed by the C compiler to locate Motif, Xt and
+# X-window include files.
+ 
+   MOTIF_INCL="$XINCL"
+
+# Optional: Needed by XADRIV (/xathena).
+# The arguments needed by the C compiler to locate Xaw, Xt and
+# X-window include files.
+ 
+   ATHENA_INCL="$XINCL"
+
+# Optional: Needed by TKDRIV (/xtk).
+# The arguments needed by the C compiler to locate Tcl, Tk and
+# X-window include files.
+ 
+   TK_INCL="-I/usr/include $XINCL"
+
+# Optional: Needed by RVDRIV (/xrv).
+# The arguments needed by the C compiler to locate Rivet, Tcl, Tk and
+# X-window include files.
+ 
+   RV_INCL=""
+
+# Mandatory.
+# The FORTRAN compiler to use.
+ 
+   FCOMPL="gfortran"
+
+# Mandatory.
+# The FORTRAN compiler flags to use when compiling the pgplot library.
+# (NB. makemake prepends -c to $FFLAGC where needed)
+ 
+   FFLAGC="-fPIC -O"
+
+# Mandatory.
+# The FORTRAN compiler flags to use when compiling fortran demo programs.
+# This may need to include a flag to tell the compiler not to treat
+# backslash characters as C-style escape sequences
+ 
+   FFLAGD="-fno-backslash"
+
+# Mandatory.
+# The C compiler to use.
+ 
+# try gcc that goes with gfortran
+   CCOMPL="gcc"
+
+# Mandatory.
+# The C compiler flags to use when compiling the pgplot library.
+ 
+   CFLAGC="-I/opt/homebrew/include -Wall -fPIC -DPG_PPU -O"
+
+# Mandatory.
+# The C compiler flags to use when compiling C demo programs.
+ 
+   CFLAGD="-I/opt/homebrew/include -Wall -O"
+
+# Optional: Only needed if the cpgplot library is to be compiled.
+# The flags to use when running pgbind to create the C pgplot wrapper
+# library. (See pgplot/cpg/pgbind.usage)
+ 
+   PGBIND_FLAGS="bsd"
+
+# Mandatory.
+# The library-specification flags to use when linking normal pgplot
+# demo programs.
+ 
+#   LIBS="-L/opt/local/lib -lX11 -L/usr/lib"
+   LIBS="-L/opt/homebrew/lib -L/usr/X11/lib -lX11 -L/usr/lib"
+
+# Optional: Needed by XMDRIV (/xmotif).
+# The library-specification flags to use when linking motif
+# demo programs.
+ 
+   MOTIF_LIBS="-lXm -lXt $LIBS"
+
+# Optional: Needed by XADRIV (/xathena).
+# The library-specification flags to use when linking athena
+# demo programs.
+ 
+   ATHENA_LIBS="-lXaw -lXt -lXmu -lXext $LIBS"
+
+# Optional: Needed by TKDRIV (/xtk).
+# The library-specification flags to use when linking Tk demo programs.
+# Note that you may need to append version numbers to -ltk and -ltcl.
+ 
+   TK_LIBS="-L/usr/lib -ltk -ltcl $LIBS -ldl"
+
+# Mandatory.
+# On systems that have a ranlib utility, put "ranlib" here. On other
+# systems put ":" here (Colon is the Bourne-shell do-nothing command).
+ 
+   RANLIB="ranlib"
+
+# Optional: Needed on systems that support shared libraries.
+# The name to give the shared pgplot library.
+ 
+#   SHARED_LIB="libpgplot.so"
+   SHARED_LIB=""
+
+# Optional: Needed if SHARED_LIB is set.
+# How to create a shared library from a trailing list of object files.
+ 
+#   SHARED_LD="gcc -shared  -o $SHARED_LIB"
+   SHARED_LD="gcc  -bundle -flat_namespace -undefined suppress -o $SHARED_LIB"
+
+# Optional:
+# On systems such as Solaris 2.x, that allow specification of the
+# libraries that a shared library needs to be linked with when a
+# program that uses it is run, this variable should contain the
+# library-specification flags used to specify these libraries to
+# $SHARED_LD
+ 
+   SHARED_LIB_LIBS=""
+
+# Optional:
+# Compiler name used on Next systems to compile objective-C files.
+ 
+   MCOMPL="cc"
+
+# Optional:
+# Compiler flags used with MCOMPL when compiling objective-C files.
+ 
+   MFLAGC="-DPG_PPU -O2 -I."
+
+# Optional: (Actually mandatory, but already defined by makemake).
+# Where to look for any system-specific versions of the files in
+# pgplot/sys. Before evaluating this script, makemake sets SYSDIR to
+# /wherever/pgplot/sys_$OS, where $OS is the operating-system name
+# given by the second command-line argument of makemake. If the
+# present configuration is one of many for this OS, and it needs
+# different modifications to files in pgplot/sys than the other
+# configurations, then you should create a subdirectory of SYSDIR,
+# place the modified files in it and change the following line to
+# $SYSDIR="$SYSDIR/subdirectory_name".
+ 
+   SYSDIR="$SYSDIR"
diff -urN pgplotsrc-orig/sys_linux/gfortran_gcc.conf pgplotsrc/sys_linux/gfortran_gcc.conf
--- pgplotsrc-orig/sys_linux/gfortran_gcc.conf	1970-01-01 10:00:00
+++ pgplotsrc/sys_linux/gfortran_gcc.conf	2024-07-01 17:21:45
@@ -0,0 +1,148 @@
+# The GNU gfortran FORTRAN compiler and gcc compiler 
+#-----------------------------------------------------------------------
+
+# Optional: Needed by XWDRIV (/xwindow and /xserve) and
+#           X2DRIV (/xdisp and /figdisp).
+# The arguments needed by the C compiler to locate X-window include files.
+ 
+#   XINCL="-I/opt/local/include"
+   XINCL="-I/usr/X11/include"
+
+# Optional: Needed by XMDRIV (/xmotif).
+# The arguments needed by the C compiler to locate Motif, Xt and
+# X-window include files.
+ 
+   MOTIF_INCL="$XINCL"
+
+# Optional: Needed by XADRIV (/xathena).
+# The arguments needed by the C compiler to locate Xaw, Xt and
+# X-window include files.
+ 
+   ATHENA_INCL="$XINCL"
+
+# Optional: Needed by TKDRIV (/xtk).
+# The arguments needed by the C compiler to locate Tcl, Tk and
+# X-window include files.
+ 
+   TK_INCL="-I/usr/include $XINCL"
+
+# Optional: Needed by RVDRIV (/xrv).
+# The arguments needed by the C compiler to locate Rivet, Tcl, Tk and
+# X-window include files.
+ 
+   RV_INCL=""
+
+# Mandatory.
+# The FORTRAN compiler to use.
+ 
+   FCOMPL="gfortran"
+
+# Mandatory.
+# The FORTRAN compiler flags to use when compiling the pgplot library.
+# (NB. makemake prepends -c to $FFLAGC where needed)
+ 
+   FFLAGC="-fPIC -O -fallow-argument-mismatch"
+
+# Mandatory.
+# The FORTRAN compiler flags to use when compiling fortran demo programs.
+# This may need to include a flag to tell the compiler not to treat
+# backslash characters as C-style escape sequences
+ 
+   FFLAGD="-fno-backslash"
+
+# Mandatory.
+# The C compiler to use.
+ 
+# try gcc that goes with gfortran
+   CCOMPL="gcc"
+
+# Mandatory.
+# The C compiler flags to use when compiling the pgplot library.
+ 
+   CFLAGC="-Wall -fPIC -DPG_PPU -O"
+
+# Mandatory.
+# The C compiler flags to use when compiling C demo programs.
+ 
+   CFLAGD="-Wall -O"
+
+# Optional: Only needed if the cpgplot library is to be compiled.
+# The flags to use when running pgbind to create the C pgplot wrapper
+# library. (See pgplot/cpg/pgbind.usage)
+ 
+   PGBIND_FLAGS="bsd"
+
+# Mandatory.
+# The library-specification flags to use when linking normal pgplot
+# demo programs.
+ 
+#   LIBS="-L/opt/local/lib -lX11 -L/usr/lib"
+   LIBS="-L/usr/X11/lib -lX11 -L/usr/lib"
+
+# Optional: Needed by XMDRIV (/xmotif).
+# The library-specification flags to use when linking motif
+# demo programs.
+ 
+   MOTIF_LIBS="-lXm -lXt $LIBS"
+
+# Optional: Needed by XADRIV (/xathena).
+# The library-specification flags to use when linking athena
+# demo programs.
+ 
+   ATHENA_LIBS="-lXaw -lXt -lXmu -lXext $LIBS"
+
+# Optional: Needed by TKDRIV (/xtk).
+# The library-specification flags to use when linking Tk demo programs.
+# Note that you may need to append version numbers to -ltk and -ltcl.
+ 
+   TK_LIBS="-L/usr/lib -ltk -ltcl $LIBS -ldl"
+
+# Mandatory.
+# On systems that have a ranlib utility, put "ranlib" here. On other
+# systems put ":" here (Colon is the Bourne-shell do-nothing command).
+ 
+   RANLIB="ranlib"
+
+# Optional: Needed on systems that support shared libraries.
+# The name to give the shared pgplot library.
+ 
+#   SHARED_LIB="libpgplot.so"
+   SHARED_LIB=""
+
+# Optional: Needed if SHARED_LIB is set.
+# How to create a shared library from a trailing list of object files.
+ 
+#   SHARED_LD="gcc -shared  -o $SHARED_LIB"
+   SHARED_LD="gcc  -bundle -flat_namespace -undefined suppress -o $SHARED_LIB"
+
+# Optional:
+# On systems such as Solaris 2.x, that allow specification of the
+# libraries that a shared library needs to be linked with when a
+# program that uses it is run, this variable should contain the
+# library-specification flags used to specify these libraries to
+# $SHARED_LD
+ 
+   SHARED_LIB_LIBS=""
+
+# Optional:
+# Compiler name used on Next systems to compile objective-C files.
+ 
+   MCOMPL="cc"
+
+# Optional:
+# Compiler flags used with MCOMPL when compiling objective-C files.
+ 
+   MFLAGC="-DPG_PPU -O2 -I."
+
+# Optional: (Actually mandatory, but already defined by makemake).
+# Where to look for any system-specific versions of the files in
+# pgplot/sys. Before evaluating this script, makemake sets SYSDIR to
+# /wherever/pgplot/sys_$OS, where $OS is the operating-system name
+# given by the second command-line argument of makemake. If the
+# present configuration is one of many for this OS, and it needs
+# different modifications to files in pgplot/sys than the other
+# configurations, then you should create a subdirectory of SYSDIR,
+# place the modified files in it and change the following line to
+# $SYSDIR="$SYSDIR/subdirectory_name".
+ 
+   SYSDIR="$SYSDIR"
